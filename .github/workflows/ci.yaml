name: Python package

on:
  push:
    paths-ignore:
      - "**/README.md"

env:
  GH_TOKEN: "foo"
  STRAVA_CLIENT_ID: 123
  STRAVA_REFRESH_TOKEN: "bar"
  STRAVA_CLIENT_SECRET: "baz"
  GCP_PROJECT_ID: "foo-bar-baz"
  GCP_BIGQUERY_DATASET: "strava"

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    strategy:
      fail-fast: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Poetry
        run: |
          pipx install poetry
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
          poetry config installer.parallel true --local

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "poetry"

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: poetry-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run ruff linting
        run: poetry run ruff check stravabqsync/ tests/

      - name: Run ruff formatting check
        run: poetry run ruff format --check stravabqsync/ tests/

  test:
    runs-on: ubuntu-latest
    name: Test
    strategy:
      fail-fast: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Poetry
        run: |
          pipx install poetry
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
          poetry config installer.parallel true --local

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "poetry"

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: poetry-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run tests with coverage
        run: poetry run pytest --cov=stravabqsync --cov-report=xml --cov-report=term tests/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true

  typecheck:
    runs-on: ubuntu-latest
    name: Type Check
    strategy:
      fail-fast: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Poetry
        run: |
          pipx install poetry
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
          poetry config installer.parallel true --local

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "poetry"

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: poetry-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run mypy type checking
        run: poetry run mypy stravabqsync/
